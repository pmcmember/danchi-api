export:
  Resources:
    #=====================================#
    ## メール送信権限lambdaロール          #
    #=====================================#
    SendEmailRole:
      Type: AWS::IAM::Role
      DependsOn:
        - OperationAllTableOwnedByAppPolicy
        - SendEmailPolicy
        - SendNoticePolicy
        - EnableWriteLogPolicy
      Properties:
        RoleName: ${self:custom.servicePrefix.IAM-Role}-SendEmail
        Path: /${self:app}/
        ManagedPolicyArns:
          - !Ref OperationAllTableOwnedByAppPolicy
          - !Ref SendEmailPolicy
          - !Ref SendNoticePolicy
          - !Ref EnableWriteLogPolicy
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Tags:
          - Key: Name
            Value: ${self:custom.servicePrefix.IAM-Role}-SendEmail
          - Key: Project
            Value: ${self:custom.project}
          - Key: App
            Value: ${self:app}
          - Key: STAGE
            Value: ${self:provider.stage}
    #=====================================#
    ## ヘルスチェック用lambdaロール        #
    #=====================================#
    HealthCheckRole:
      Type: AWS::IAM::Role
      DependsOn:
        - SendNoticePolicy
        - EnableWriteLogPolicy
        - OperationSendNoticeHistoryTablePolicy
      Properties:
        RoleName: ${self:custom.servicePrefix.IAM-Role}-HealthCheck
        Path: /${self:app}/
        ManagedPolicyArns:
          - !Ref SendNoticePolicy
          - !Ref EnableWriteLogPolicy
          - !Ref OperationSendNoticeHistoryTablePolicy
        Policies:
          - PolicyName: ${self:custom.servicePrefix.IAM-Policy}-HealthCheck
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - ses:GetAccountSendingEnabled
                  Resource: "*"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Tags:
          - Key: Name
            Value: ${self:custom.servicePrefix.IAM-Role}-HealthCheck
          - Key: Project
            Value: ${self:custom.project}
          - Key: App
            Value: ${self:app}
          - Key: STAGE
            Value: ${self:provider.stage}
    #=====================================#
    ## ライブ予定取得lambda用ロール        #
    #=====================================#
    LivePlanRole:
      Type: AWS::IAM::Role
      DependsOn:
        - SendNoticePolicy
        - EnableWriteLogPolicy
        - OperationSendNoticeHistoryTablePolicy
      Properties:
        RoleName: ${self:custom.servicePrefix.IAM-Role}-LivePlan
        Path: /${self:app}/
        ManagedPolicyArns:
          - !Ref SendNoticePolicy
          - !Ref EnableWriteLogPolicy
          - !Ref OperationSendNoticeHistoryTablePolicy
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Tags:
          - Key: Name
            Value: ${self:custom.servicePrefix.IAM-Role}-LivePlan
          - Key: Project
            Value: ${self:custom.project}
          - Key: App
            Value: ${self:app}
          - Key: STAGE
            Value: ${self:provider.stage}
    #=====================================#
    ## APIGateway用ロール                 #
    #=====================================#
    APIGWStandardRole:
      Type: AWS::IAM::Role
      DependsOn:
        - EnableWriteLogPolicy
        - LambdaInvokePolicy
      Properties:
        RoleName: ${self:custom.servicePrefix.IAM-Role}-APIGWStandard
        Path: /${self:app}/
        ManagedPolicyArns:
          - !Ref EnableWriteLogPolicy
          - !Ref LambdaInvokePolicy
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - apigateway.amazonaws.com
              Action: sts:AssumeRole
        Tags:
          - Key: Name
            Value: ${self:custom.servicePrefix.IAM-Role}-LivePlan
          - Key: Project
            Value: ${self:custom.project}
          - Key: App
            Value: ${self:app}
          - Key: STAGE
            Value: ${self:provider.stage}

    #=====================================#
    ## SlackChatbot用ロール
    #=====================================#
    SlackChatbotRole:
      Type: AWS::IAM::Role
      DependsOn:
        - EnableWriteLogPolicy
      Properties:
        RoleName: ${self:custom.servicePrefix.IAM-Role}-SlackChatbot
        Path: /${self:app}/
        ManagedPolicyArns:
          - !Ref EnableWriteLogPolicy
          - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: chatbot.amazonaws.com
              Action: sts:AssumeRole
        Tags:
          - Key: Name
            Value: ${self:custom.servicePrefix.IAM-Role}-LivePlan
          - Key: Project
            Value: ${self:custom.project}
          - Key: App
            Value: ${self:app}
          - Key: STAGE
            Value: ${self:provider.stage}

  Outputs:
    SendEmailRoleArn:
      Value: !GetAtt SendEmailRole.Arn
      Export:
        Name: ${self:provider.stackName}-SendEmailRoleArn
    HealthCheckRoleArn:
      Value: !GetAtt HealthCheckRole.Arn
      Export:
        Name: ${self:provider.stackName}-HealthCheckRoleArn
    LivePlanRoleArn:
      Value: !GetAtt LivePlanRole.Arn
      Export:
        Name: ${self:provider.stackName}-LivePlanRoleArn
    APIGWStandardRoleArn:
      Value: !GetAtt APIGWStandardRole.Arn
      Export:
        Name: ${self:provider.stackName}-APIGWStandardRoleArn